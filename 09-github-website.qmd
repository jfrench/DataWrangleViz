---
title: "Creating websites using Quarto and GitHub Pages"
author: "Joshua P. French"
date: today
date-format: long
engine: knitr
format: html
# jupyter:
#   kernelspec:
#     display_name: R
#     language: R
#     name: ir
# format: ipynb
# execute:
#   output: false
self-contained: true
title-block-banner: true
wrap: 'none'
---

To open this information in an interactive Colab notebook, click or scan the QR code below. 

<a href="https://colab.research.google.com/github/jfrench/DataWrangleViz/blob/master/09-github-website.ipynb">
   <img src="https://raw.githubusercontent.com/jfrench/DataWrangleViz/64f16034325c26455a9348ceaed1324ce31ab742/qr_codes/qr-github-website.svg">
</a>

---

Many data scientists have a website to market themselves. This is helpful for distinguishing yourself from competitors by showcasing who you are and what you've done.

It is very easy to create a personal webpage using Quarto websites and GitHub. We will walk through the process of creating a very simple professional website that you can further customize to suit your own needs.

## What is git?

<img src="./figures/git_logo.png" height="200" />

Software developers need a fast, reliable way of tracking changes to their source code when working as individuals or as part of a team. 

The best-in-class approach to software version control is git, which was created by Linus Torvalds in 2005 to improve on the version control applications available at the time.

From [https://git-scm.com/](https://git-scm.com/):

> Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. 

By default, git tracks files changed in a directory or respository locally, i.e., on our actual computer, which can create some potential challenges:

- git does not backup your code or changes, which could potentially be problematic.
- A centralized repository must be available when multiple contributors are working on the same project. There needs to be a way of easily managing each person's contributions and keeping track of the development and stable branches of the code.

GitHub provides one of the most population solutions for these two issues.

## What is GitHub?

<img src="./figures/github_cat.png" height="200" /><img src="./figures/github_logo.png" height="200" />

GitHub ([https://www.github.com](https://www.github.com)) is an online platform for hosting git repositories. Additionally, it makes it easy to:

- Control who is able to access and change a repository
- Track bugs in our code
- Keep record of feature requests
- Delegate responsibilities
- Maintain a wiki
- etc.

GitHub is a great place to:

- Backup and maintain version control of your software.
- Make your software public and allow others to contribute and interact with your work. 
- Put project repositories to demonstrate your coding skills and abilities.
- Host a professional website that advertises to potential employers or clients about how wonderful you are.

## What is Quarto? (Video: [YouTube](https://youtu.be/e9qCS8ODs4o), [Panopto](https://ucdenver.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=7bc5015f-627c-46f7-89bc-af55016accbe))

<img src="./figures/quarto_logo.jpg" height="200" />

The Quarto website ([https://quarto.org/docs/faq/](https://quarto.org/docs/faq/)) states:

> Quarto is an open-source scientific and technical publishing system built on Pandoc. You can weave together narrative text and code to produce elegantly formatted output as documents, web pages, blog posts, books and more. 

More helpfully, Quarto is the spiritual successor to R Markdown that was built from the ground up to be compatible with:

- R
- Python
- Julia
- Observable JavaScript.

Quarto's development is sponsored by Posit ([https://posit.co/](https://posit.co/)), which was formally known as R Studio.

<img src="./figures/posit_logo.svg" height="100" />

You can use Quarto to create: 

- Technical documents
- Books
- Blogs
- Websites.

If you have successfully produced material using R Markdown, then you should feel at home producing materials using Quarto (and may want to shift future content production to Quarto documents). 

The R Markdown ecosystem was very mature when the decision to develop Quarto was made, so Quarto is designed to better integrate the various document types, options, and customizations available in R Markdown. Essentially, Quarto attempts to take the strengths of R Markdown while correcting some of its weaknesses.

Quarto documents can be edited in:

- R Studio (my favorite)
- VS Code
- JupyterLab
- Any text editor.

R Studio provides the most feature-rich environment for creating Quarto documents.

To open a new Quarto document in R Studio:

1. From the File menu click File &rarr; New File &rarr; Quarto Document.
2. Make the appropriate changes.
3. Click the Create button.

Click the Render button, <img style="height:2em;" src="./figures/render_button.png" />, to render the default Quarto document.

## Creating a starter Quarto website (Video: [YouTube](https://youtu.be/_bglTCjgcqY), [Panopto](https://ucdenver.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=7003fa83-cd77-45d8-9031-af5b01816dbe))

The initial step to creating a Quarto website is to create a new Quarto website project.

In R Studio:

1. From the File menu, click File &rarr; New Project.
2. Select New Directory &rarr; Quarto website.
3. Choose a Directory name.

    - Your GitHub-hosted personal website will have an address like `https://username.github.io`, while a website associated with a project will have the address `https://username.github.io/name`, where `username` is your GitHub username and `name` is the name of the GitHub repository for the website.
    - If the hosted website will be `https://username.github.io`, then choose the directory name to be `username.github.io`.
    - If the hosted website will be `https://username.github.io/name/`, then for simplicity, choose the directory name to be `name`.
4. Choose where you want the directory to be located.
5. Knitr is a suitable option for the rendering engine.
6. Regarding the check boxes, I'd recommend
    - Checking the box next to "Create a git repository". Since we will be hosting the website on GitHub, you want to do this. If you are hosting your website elsewhere, then you can probably uncheck this box. Note: if you don't have this option, then it probably means that you don't have git installed. Instructions for installing git are currently found at [https://git-scm.com/book/en/v2/Getting-Started-Installing-Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git). After installing git, restart R Studio and the option should be present.
    - Uncheck the boxes next to "Use renv with this project". **renv** is a package for project-local R dependency management. Unless you're running completed R code on your webpages, then this isn't needed
    - Uncheck "Use visual markdown editor". The visual markdown editor provides standard word processor like interface to your project. For me, this causes more problems than it solves, so I don't use this. You may have a different preference.
7. Click "Create Project".

See @fig-project-options for the recommended choices.

![Recommended options when creating a Quarto website.](./figures/create_quarto_website.png){#fig-project-options}

After clicking "Create Project", a new project will be created in the specified directory with the following files:

- `_quarto.yml`: a YAML header that control certain aspects of the website like the main title of the site, the pages included in the site, and the theme (color scheme) of the site. 
- `.gitignore`: a file that contains files and directories that git isn't supposed to track.
- `index.qmd`: the file that controls the default home page for your website.
- `about.qmd`: a file that's supposed to add a page to your website with information about you. This is really an optional file.
- `*.Rproj`: the R project file associated with your website. Open this to reopen your R Studio workspace.
- `styles.css`: a file to create custom styles for use on your website.

The available files are enough to create an initial version of your website.

Click the Render button, <img style="height:2em;" src="./figures/render_button.png" />, to render the default Quarto website.

A complete description of available website options is available at [https://quarto.org/docs/reference/projects/websites.html](https://quarto.org/docs/reference/projects/websites.html).

To host your Quarto website using GitHub pages, you will need to change the output directory of your project. We discuss that next.

## Changing the output directory of a Quarto website (Video: [YouTube](https://youtu.be/ZkcY9YQ3iLY), [Panopto](https://ucdenver.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=96287ae6-4099-4e8b-91c5-af5b0181a617))

The output directory is where Quarto saves the files for the rendered website.

To host your Quarto website using GitHub pages, it is best to change the output directory to "docs".

To change the output directory of your Quarto website:

- Go to the `_quarto.yml` file
- Add the line `output-dir: docs` under `type: website`

That part of your `_quarto.yml` file will look something like the code below.

```
project:
  type: website
  output-dir: docs
```

After making this change:

- Navigate back to `index.qmd`
- Click the Render button, <img style="height:2em;" src="./figures/render_button.png" />

The "docs" folder will now appear in the Files pane.

You are now ready to push your website to GitHub so that it can be rendered using GitHub Pages.

## Publishing a Quarto website on GitHub Pages (Video: [YouTube](https://youtu.be/uimdXPZc40I), [Panopto](https://ucdenver.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=e30956c1-5ab6-4418-b6f4-af5b0181bf5e))

GitHub Pages ([https://pages.github.com/](https://pages.github.com/)) is a feature of GitHub that allows you to host websites for you and your projects.

The websites are hosted directly from your GitHub repository, meaning that you can:

- Keep a git repository of your website
- Push changes of your website to GitHub
- See the changed website almost instantly on GitHub.

If your GitHub username is `username` and your website is contained in the `demosite` respository, then your rendered website will be `https://username.github.io/demosite/`.

- The rendered website for this tutorial is available at  [https://jfrench.github.io/demosite](https://jfrench.github.io/demosite).
- The rendered website for my in-progress open education resource (OER) book on linear regression is available at [https://jfrench.github.io/LinearRegression](https://jfrench.github.io/LinearRegression).

If you are creating a personal website, then it is best to host it as `https://username.github.io`.

To begin this process:

- Log in to GitHub.
- From the main page, create a GitHub repository.
    - For your personal website, the repository name should be `username.github.io`. Obviously, replace `username` with your actual user name). @fig-create-username-github-io-repository displays an example of this.
    - For a project website, use the name of the project directory. As previously mentioned, I use "demosite" for the website we create.

![Creating a username.github.io respository from the GitHub homepage.](./figures/create_username_github_io_respository.png){#fig-create-username-github-io-repository}

After creating your website:

- Push the changes to the repository your want to be hosted by GitHub pages. If you're not familiar with doing this manually, then you can literally copy the contents of your project directory to GitHub. 
- On GitHub.com, navigate to your website's repository.
- Click on the Settings button, <img style="height:2em;" src="./figures/github_settings_button.png" />.
- On the Navigation bar, click "Pages".
- If you've set the output directory for your website to "docs" (which you should), then toggle the "/(root)" option to "/docs" and click the "Save" button. @fig-github-pages demonstrates this.

![Selecting GitHub Pages Settings.](./figures/github_pages.png){#fig-github-pages}

In a few minutes, you should see the initial version of your website at 
`https://username.github.io` or `https://username.github.io/name` depending on the type of site you created.

## Changing the main title of a Quarto website (Video: [YouTube](https://youtu.be/7aMQ2BaAp5E), [Panopto](https://ucdenver.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=0abd38c6-40d1-44ec-9f34-af5b0181cf3c))

The main title of a Quarto website is controlled through the `_quarto.yml` file.

Specifically, find the section of `_quarto.yml` where it has:

```
website:
  title: "demosite"
```

Change "demosite" (or whatever title you have) to whatever you wish. For your personal website, it makes sense to use something like:

- "First name Last name", e.g., Langston Hughes"
- "First name Middle initial Last name", e.g., Amy R. Tan"
- Your brand identity, e.g., "Assistant to the Regional Data Manager"

Change the title to something you prefer and click the Render button, <img style="height:2em;" src="./figures/render_button.png" />, to render a Quarto website with a custom title.

## Adding or removing a page from a Quarto website (Video: [YouTube](https://youtu.be/EjGdjHCo_Ms), [Panopto](https://ucdenver.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=b1fc4da4-7571-46ba-b963-af5b0181d651))

Pages can easily be added or removed from a Quarto website.

To add a new page to your website, add a new Quarto document to your project folder:

- Click File &rarr; New File &rarr; Quarto Document ...
- Enter the desired page Title in the Title box of the New Quarto Document window.
- Click the Create Empty Document button in the lower left corner of the window.
- Press `Ctrl + s` (Windows) or `Cmd + s` (Mac) to bring up the Save File window.
- Name your file and click the Save button.

@fig-new-quarto-document displays the New Quarto Document window you would have to create a new Quarto document with the title "Favorites". 

![Creating an empty Quarto document with the title "Favorites".](./figures/new_quarto_document_favorites.png){#fig-new-quarto-document}

@fig-save-quarto-dialog shows the Save File window you would use to create `favorites.qmd`.

![Save a Quarto document with the filename `favorites.qmd`.](./figures/save_quarto_dialog.png){#fig-save-quarto-dialog}

Now you can add the desired content to your new Quarto document. We will add the following text to `favorites.qmd`.

```
## Favorite dog breeds

- Shetland Sheepdog
- Golden Retriever
- Labrador

## Favorite characters from the Lord of the Rings movies

- Samwise Gamgee
- Legolas
- Aragorn
```

To add the "Favorites" page to our website, we open the `_quarto.yml` file and navigate to the `navbar` section where `.qmd` files are listed after a dash. We add a new row with `- favorites.qmd` as in the code below.

```
  navbar:
    left:
      - href: index.qmd
        text: Home
      - about.qmd
      - favorites.qmd
```

To remove a page from your Quarto website, simply delete its line from the `navbar` section. Don't remove the `index.qmd` row unless you want to break your website.

Navigate to a `.qmd` file and click the Render button, <img style="height:2em;" src="./figures/render_button.png" />, to render the Quarto website that now has added a new page.

## Changing the color and style theme of a Quarto website (Video: [YouTube](https://youtu.be/7UW4ms1JCdY), [Panopto](https://ucdenver.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=71b52214-366b-4e0b-bb88-af5c0164ccc7))

Themes can be used to change the default color and style
themes of a Quarto website.

Quarto provides over 20 themes "out of the box" from [Bootswatch.com](https://bootswatch.com/). Some of my favorite themes include:

- journal
- lux
- quartz
- simplex
- spacelab

A complete list of themes is available at [https://quarto.org/docs/output-formats/html-themes.html#overview](https://quarto.org/docs/output-formats/html-themes.html#overview).

To get a taste of theme customization, let's change the theme of a Quarto
website to "sandstone". We update the `theme` option
of the `_quarto.yml` file to `sandstone` using the code below.

```
format:
  html:
    theme: sandstone
```

Theme options can be used to customize a theme and set the default choice for the entire document. These include:

- `mainfont`: the default font-family
- `fontsize`: the default font-size
- `fontcolor`: the default text color
- `linkcolor`: the default color for hyperlinks
- `monofont`: the default font-family for code
- `backgroundcolor`: the default background color for the
entire document.

A more detailed discussion of theme customization can be found at
[https://quarto.org/docs/output-formats/html-themes.html](https://quarto.org/docs/output-formats/html-themes.html).

Quarto font sizes can be specified using many different units.

- Absolute units like pt, cm, mm, in, pc, etc. are not recommended.
- Relative units like em or rem are better.
    - 1em is equivalent to the default font size for body text. So 3em is 3 times as big as the body font.
    - rem, which stands for root em, is the font size of the root element of the document, which is consistent throughout the document.

Quarto website colors are specified in hexadecimal format.

- The website [https://htmlcolorcodes.com/](https://htmlcolorcodes.com/) is a handy tool for determining hexadecimal values to make font or background color changes.
- Place quotes around the hexadecimal values when you use them to change a color in your document.

We now customize:

- The main font of the website
- The standard font size
- The standard font color
- The color of hyperlinks
- The font used for code.

by editing the appropriate section of `_quarto.yml`.

```
    theme: sandstone
    mainfont: arial
    fontsize: 1.5rem
    fontcolor: "#0013d5"
    linkcolor: "#ff33f0"
    monofont: courier new
```

Navigate to a `.qmd` file and click the Render button, <img style="height:2em;" src="./figures/render_button.png" />, to render the Quarto website that now has added a new page.

## Using a Quarto website "about" template (Video: [YouTube](https://youtu.be/hceM0-RuPwo), [Panopto](https://ucdenver.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=7680d9a7-510d-48a6-b6b7-af610166bbe3))

While Quarto is naturally great for building technical documents, on the surface, it is not great for building a snazzy website.

An about template can be used to create a page with a specific default structure. These templates are designed to look great by default and to help website visitors learn "about" you. 

Each page in a Quarto website is rendered from `qmd` files you place in the project directory.

- Using an about template will change the page's structure.
- An about template is specified in the YAML header of the `.qmd` file you want to customize.

Currently, Quarto has 5 built in templates that are discussed in more detail at [https://quarto.org/docs/websites/website-about.html#templates](https://quarto.org/docs/websites/website-about.html#templates).

The current templates are:

- `jolla`
- `trestles`
- `solana`
- `marquee`
- `broadside`

A preview of each template is available at [https://quarto.org/docs/websites/website-about.html#templates](https://quarto.org/docs/websites/website-about.html#templates).

Each template allows you to add the following elements:

- `image`: an image you want to display on the page. This could be a picture of yourself or something else you want the page to display. You can customize the image in two ways:
    - `image-width`: A valid CSS width for your image.
    - `image-shape`: The shape of the image.
      - The shape options are: `rectangle`, `rounded`, `round`.
      - Shape options are only available for the jolla, solana, and trestles templates.
- `links`: links you want to provide for the user to click on. These could be links to your GitHub page, email address, Twitch account etc. The links have the following options:
  - `href`: a link to a file contained with the project or an external URL.
  - `text`: the text 	to display for the link (if not provided, the default is the document title).
  - `icon`: the name of one of the standard Bootstrap 5 icons (e.g. "envelope", "github", "twitter", "youtube", etc.). A current list of icons is available at [https://icons.getbootstrap.com/](https://icons.getbootstrap.com/).
  - `aria-label`: accessible label for the navigation item.
- Partial page content: this is text on your page that doesn't have the same formatting as the rest of the template.
  - Specify the `id` option under `about` to indicate the keyword to start the partial page content.
  - Include the desired partial page content between `:::{#id-name}` and `:::`, where `id-name` is the name specified for the `id` option.

Personally, I like to use an about template on the home page of my website, not on a separate "About" page. Obviously, that is up to you. 

You will need to add three files to your project directory to complete the example below. You can:

- Manually download the files from my GitHub page at [https://github.com/jfrench/DataWrangleViz/tree/master/data](https://github.com/jfrench/DataWrangleViz/tree/master/data).
- Download the files by directly clicking the file names below.

Add the following three files to your project directory:

- [`mypic.png`](https://raw.githubusercontent.com/jfrench/DataWrangleViz/master/data/mypic.png)
- [`dawgs.png`](https://raw.githubusercontent.com/jfrench/DataWrangleViz/master/data/dawgs.png)
- [`resume.pdf`](https://raw.githubusercontent.com/jfrench/DataWrangleViz/master/data/resume.pdf)

### Using the about template, adding an image and title

To use an about template, we must change the YAML header of our file. We will do this for `index.qmd`, the main page of our website.

We will replace the YAML header of `index.qmd` with code that will:

- Use the "jolla" template
- Use a round image ("mypic.png")
- Add the title "J.T. Smith" on the page

```
---
title: "J.T. Smith"
image: mypic.png
about:
  template: jolla
  image-shape: round
  image-width: 15em
---
```

### Adding links to an about template

Next we discuss add URL and file links to our about template. 

We add the following rows under the `about` section of our YAML header, which will add clickable links for an email address, a GitHub page, a YouTube page, and a file, as well as icons for each link.

```
  links:
    - text: Email
      icon: envelope
      href: mailto:noreply@email.zz
    - text: GitHub
      icon: github
      href: https://github.com/
    - text: YouTube
      icon: youtube
      href: https://youtube.com/
    - text: resume
      icon: file-text
      href: resume.pdf
```

### Adding partial page content to an about template

To add partial page content to our about template, we must:

1. Indicate an id in the YAML header of the page.
2. Add the partial page content below the header.

We add the following id for our partial page content:

```
  id: ppc
```

Then, below our YAML header, we add some content about dogs and why someone should hire us.

```
:::{#ppc}
I love my dogs. Here is a picture of my dogs.

![My dogs are awesome](dawgs.png)

If you like dogs too, then you should definitely hire me for
a highly paid position.
:::
```

Click the Render button, <img style="height:2em;" src="./figures/render_button.png" />, to render the Quarto website.

## Fixing a broken file link on a Quarto website (Video: [YouTube](https://youtu.be/WpI_aRn_ImI), [Panopto](https://ucdenver.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=a40d3fb2-01c7-43d5-a6c0-af610167d7fd))

Linking to a file in a Quarto website is slightly more complicated than linking to a URL.

Notice that `resume.pdf` on the demosite isn't available. It isn't available because it is not in the docs folder used to render the website. (You can verify this by navigating to the docs older in the Files pane of R Studio). There are two options to correct this:

1. Manually copy `resume.pdf` to the docs folder. Don't do this.
2. Add the line `resources: resume.pdf` to your YAML header. This tells Quarto to copy this file to your docs folder when rendering the website. This is the best approach.

In the code below, we wedge `resources: resume.pdf` between the `image` and `about` options.

```
image: mypic.png
resources: resume.pdf
about:
```

Click the Render button, <img style="height:2em;" src="./figures/render_button.png" />, to render the Quarto website with a corrected file link to `resume.pdf`.
